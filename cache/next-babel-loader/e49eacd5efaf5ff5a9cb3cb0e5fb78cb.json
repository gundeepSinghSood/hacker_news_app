{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { MAX_STORIES, INITIAL_STORY_LOAD } from './config';\n/**\n * custom hook\n * (innerHeight + scrollTop) != offsetHeight \n */\n\nvar useInfiniteScroll = function useInfiniteScroll() {\n  _s();\n\n  var _useState = useState(false),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(INITIAL_STORY_LOAD),\n      count = _useState2[0],\n      seCount = _useState2[1];\n\n  var handleScroll = function handleScroll() {\n    if (window.innerHeigh + document.documentElement.scrollTop !== document.documentElement.offsetHeight || loading) {\n      return false;\n    }\n\n    setLoading(true);\n  };\n\n  useEffect(function () {\n    if (!loading) return;\n\n    if (count + INITIAL_STORY_LOAD >= MAX_STORIES) {\n      setCount(MAX_STORIES);\n    } else {\n      setCount(count + INITIAL_STORY_LOAD);\n    }\n\n    setLoading(false);\n  }, [loading]);\n  useEffect(function () {\n    window.addEventListener('scroll', handleScroll);\n    return function () {\n      return window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return {\n    count: count\n  };\n};\n\n_s(useInfiniteScroll, \"WwwEffashaAQwqHJom+vimyvmw8=\");","map":{"version":3,"sources":["/Users/gunsood/Documents/Projects/Hacker_News_Article_App/hacker-news-app/util/useInfiniteScroll.js"],"names":["React","useState","useEffect","MAX_STORIES","INITIAL_STORY_LOAD","useInfiniteScroll","loading","setLoading","count","seCount","handleScroll","window","innerHeigh","document","documentElement","scrollTop","offsetHeight","setCount","addEventListener","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,UAAhD;AAGA;;;;;AAIA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAAA;;AAAA,kBACAJ,QAAQ,CAAC,KAAD,CADR;AAAA,MACvBK,OADuB;AAAA,MACdC,UADc;;AAAA,mBAELN,QAAQ,CAACG,kBAAD,CAFH;AAAA,MAEvBI,KAFuB;AAAA,MAEhBC,OAFgB;;AAI9B,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAGC,MAAM,CAACC,UAAP,GAAoBC,QAAQ,CAACC,eAAT,CAAyBC,SAA7C,KAA2DF,QAAQ,CAACC,eAAT,CAAyBE,YAApF,IAAoGV,OAAvG,EAAgH;AAC9G,aAAO,KAAP;AACD;;AAEDC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAND;;AASAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACI,OAAL,EAAc;;AAEd,QAAIE,KAAK,GAAGJ,kBAAR,IAA8BD,WAAlC,EAA+C;AAC7Cc,MAAAA,QAAQ,CAACd,WAAD,CAAR;AACD,KAFD,MAEO;AACLc,MAAAA,QAAQ,CAACT,KAAK,GAAGJ,kBAAT,CAAR;AACD;;AAEDG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVQ,EAUN,CAACD,OAAD,CAVM,CAAT;AAYAJ,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCR,YAAlC;AACA,WAAO;AAAA,aAAMC,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCT,YAArC,CAAN;AAAA,KAAP;AACD,GAHQ,EAGN,EAHM,CAAT;AAMA,SAAO;AAAEF,IAAAA,KAAK,EAALA;AAAF,GAAP;AACD,CAhCD;;GAAMH,iB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MAX_STORIES, INITIAL_STORY_LOAD } from './config';\n\n\n/**\n * custom hook\n * (innerHeight + scrollTop) != offsetHeight \n */\nconst useInfiniteScroll = () => {\n  const [loading, setLoading] = useState(false);\n  const [count, seCount] = useState(INITIAL_STORY_LOAD);\n  \n  const handleScroll = () => {\n    if(window.innerHeigh + document.documentElement.scrollTop !== document.documentElement.offsetHeight || loading) {\n      return false;\n    }\n    \n    setLoading(true);\n  }\n  \n  \n  useEffect(() => {\n    if (!loading) return;\n    \n    if (count + INITIAL_STORY_LOAD >= MAX_STORIES) {\n      setCount(MAX_STORIES)\n    } else {\n      setCount(count + INITIAL_STORY_LOAD)\n    }\n    \n    setLoading(false)\n  }, [loading]);\n  \n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll)\n  }, []);\n  \n  \n  return { count }\n}"]},"metadata":{},"sourceType":"module"}