{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useRef, useEffect } from \"react\";\nimport withStyles from '../../../util/styleComponentUtil/withStyles';\nimport styles, { StyledSearch } from './Search.style';\nimport { isMobile } from '../../../util/index';\n\nconst Search = ({\n  className\n}) => {\n  const searchInput = useRef();\n  const buttonInput = useRef();\n  useEffect(() => {\n    const input = document.getElementById(\"search-input\");\n    const searchBtn = document.getElementById(\"search-btn\");\n\n    if (isMobile()) {\n      searchBtn.classList.toggle(\"close\");\n      input.classList.toggle(\"square\");\n    }\n  }, []);\n\n  const searchAnimation = () => {\n    const input = document.getElementById(\"search-input\");\n    const searchBtn = document.getElementById(\"search-btn\");\n    searchBtn.classList.toggle(\"close\");\n    input.classList.toggle(\"square\");\n  };\n\n  return __jsx(StyledSearch, {\n    className: `${className} row end-xs col-xs-6 col-lg-4`\n  }, __jsx(\"form\", {\n    id: \"content\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"input\",\n    class: \"input\",\n    placeholder: isMobile() ? 'Search' : '',\n    id: \"search-input\",\n    ref: searchInput\n  }), __jsx(\"button\", {\n    type: \"reset\",\n    class: \"search\",\n    id: \"search-btn\",\n    onClick: !isMobile() && searchAnimation,\n    ref: buttonInput\n  })));\n};\n\nSearch.defaultProps = {};\nexport default withStyles(Search, styles);\nexport { Search as SearchVanilla };","map":null,"metadata":{},"sourceType":"module"}