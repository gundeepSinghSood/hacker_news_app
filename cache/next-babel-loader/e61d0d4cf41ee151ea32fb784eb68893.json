{"ast":null,"code":"var _jsxFileName = \"/Users/gunsood/Documents/Projects/Hacker_News_Article_App/hacker-news-app/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\n\nconst About = props => {\n  const {\n    0: loaded,\n    1: setLoaded\n  } = useState(false);\n  const {\n    pageTransitionReadyToEnter\n  } = props;\n  useEffect(() => {// const timeoutId = setTimeout(() => {\n    //   pageTransitionReadyToEnter()\n    //   setLoaded(true)\n    // }, 2000)\n    // return () => {\n    //   clearTimeout(timeoutId)\n    // }\n  }, [pageTransitionReadyToEnter]);\n  if (!loaded) return null;\n  return __jsx(\"div\", {\n    className: \"container bg-success page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"About us\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Notice how a loading spinner showed up while my content was \\\"loading\\\"? Pretty neat, huh?\"), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    className: \"btn btn-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Go back home\")));\n};\n\nAbout.propTypes = {\n  pageTransitionReadyToEnter: PropTypes.func\n};\nAbout.defaultProps = {\n  pageTransitionReadyToEnter: () => {}\n};\nexport default About;","map":{"version":3,"sources":["/Users/gunsood/Documents/Projects/Hacker_News_Article_App/hacker-news-app/pages/about.js"],"names":["useState","useEffect","PropTypes","Link","About","props","loaded","setLoaded","pageTransitionReadyToEnter","propTypes","func","defaultProps"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBP,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAiCH,KAAvC;AAEAJ,EAAAA,SAAS,CAAC,MAAM,CACd;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GARQ,EAQN,CAACO,0BAAD,CARM,CAAT;AAUA,MAAI,CAACF,MAAL,EAAa,OAAO,IAAP;AAEb,SACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGAFF,EAME,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CANF,CADF;AAYD,CA5BD;;AA8BAF,KAAK,CAACK,SAAN,GAAkB;AAChBD,EAAAA,0BAA0B,EAAEN,SAAS,CAACQ;AADtB,CAAlB;AAIAN,KAAK,CAACO,YAAN,GAAqB;AACnBH,EAAAA,0BAA0B,EAAE,MAAM,CAAE;AADjB,CAArB;AAIA,eAAeJ,KAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport Link from 'next/link'\n\nconst About = (props) => {\n  const [loaded, setLoaded] = useState(false)\n  const { pageTransitionReadyToEnter } = props\n\n  useEffect(() => {\n    // const timeoutId = setTimeout(() => {\n    //   pageTransitionReadyToEnter()\n    //   setLoaded(true)\n    // }, 2000)\n    // return () => {\n    //   clearTimeout(timeoutId)\n    // }\n  }, [pageTransitionReadyToEnter])\n\n  if (!loaded) return null\n\n  return (\n    <div className=\"container bg-success page\">\n      <h1>About us</h1>\n      <p>\n        Notice how a loading spinner showed up while my content was \"loading\"?\n        Pretty neat, huh?\n      </p>\n      <Link href=\"/\">\n        <a className=\"btn btn-light\">Go back home</a>\n      </Link>\n    </div>\n  )\n}\n\nAbout.propTypes = {\n  pageTransitionReadyToEnter: PropTypes.func,\n}\n\nAbout.defaultProps = {\n  pageTransitionReadyToEnter: () => {},\n}\n\nexport default About\n"]},"metadata":{},"sourceType":"module"}