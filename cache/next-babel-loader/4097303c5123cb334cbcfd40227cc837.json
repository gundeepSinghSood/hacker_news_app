{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport { MAX_STORIES, INITIAL_STORY_LOAD } from './config';\nimport { debounce } from '../util/debounce';\nexport const useInfiniteScroll = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: count,\n    1: setCount\n  } = useState(INITIAL_STORY_LOAD);\n  const handleScroll = debounce(() => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || loading) {\n      return false;\n    }\n\n    setLoading(true);\n  }, 500);\n  useEffect(() => {\n    if (!loading) return;\n\n    if (count + INITIAL_STORY_LOAD >= MAX_STORIES) {\n      setCount(MAX_STORIES);\n    } else {\n      setCount(count + INITIAL_STORY_LOAD);\n    }\n\n    setLoading(false);\n  }, [loading]);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  return {\n    count\n  };\n};","map":null,"metadata":{},"sourceType":"module"}