{"ast":null,"code":"/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport { MAX_STORIES, INITIAL_STORY_LOAD } from './config';\nexport const useInfiniteScroll = () => {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: count,\n    1: setCount\n  } = useState(INITIAL_STORY_LOAD);\n\n  const handleScroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop !== document.documentElement.offsetHeight || loading) {\n      return false;\n    }\n\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (!loading) return;\n\n    if (count + INITIAL_STORY_LOAD >= MAX_STORIES) {\n      setCount(MAX_STORIES);\n    } else {\n      setCount(count + INITIAL_STORY_LOAD);\n    }\n\n    setLoading(false);\n  }, [loading]);\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n  return {\n    count\n  };\n};","map":{"version":3,"sources":["/Users/gunsood/Documents/Projects/Hacker_News_Article_App/hacker-news-app/util/useInfiniteScroll.js"],"names":["useState","useEffect","MAX_STORIES","INITIAL_STORY_LOAD","useInfiniteScroll","loading","setLoading","count","setCount","handleScroll","window","innerHeight","document","documentElement","scrollTop","offsetHeight","addEventListener","removeEventListener"],"mappings":"AAAA;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,kBAAtB,QAAgD,UAAhD;AAEA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AACrC,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACO,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAACG,kBAAD,CAAlC;;AAEA,QAAMM,YAAY,GAAG,MAAM;AACzB,QACEC,MAAM,CAACC,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KACEF,QAAQ,CAACC,eAAT,CAAyBE,YAD3B,IAEAV,OAHF,EAIE;AACA,aAAO,KAAP;AACD;;AAEDC,IAAAA,UAAU,CAAC,IAAD,CAAV;AACD,GAVD;;AAYAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,OAAL,EAAc;;AAEd,QAAIE,KAAK,GAAGJ,kBAAR,IAA8BD,WAAlC,EAA+C;AAC7CM,MAAAA,QAAQ,CAACN,WAAD,CAAR;AACD,KAFD,MAEO;AACLM,MAAAA,QAAQ,CAACD,KAAK,GAAGJ,kBAAT,CAAR;AACD;;AAEDG,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAVQ,EAUN,CAACD,OAAD,CAVM,CAAT;AAYAJ,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCP,YAAlC;AACA,WAAO,MAAMC,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCR,YAArC,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT;AAKA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACD,CAlCM","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport { MAX_STORIES, INITIAL_STORY_LOAD } from './config';\n\nexport const useInfiniteScroll = () => {\n  const [loading, setLoading] = useState(false);\n  const [count, setCount] = useState(INITIAL_STORY_LOAD);\n\n  const handleScroll = () => {\n    if (\n      window.innerHeight + document.documentElement.scrollTop !==\n        document.documentElement.offsetHeight ||\n      loading\n    ) {\n      return false;\n    }\n\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (!loading) return;\n\n    if (count + INITIAL_STORY_LOAD >= MAX_STORIES) {\n      setCount(MAX_STORIES);\n    } else {\n      setCount(count + INITIAL_STORY_LOAD);\n    }\n\n    setLoading(false);\n  }, [loading]);\n\n  useEffect(() => {\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  return { count };\n};"]},"metadata":{},"sourceType":"module"}