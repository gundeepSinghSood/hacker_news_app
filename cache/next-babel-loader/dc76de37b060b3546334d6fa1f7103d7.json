{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport var useDarkMode = function useDarkMode() {\n  _s();\n\n  var _useState = useState('light'),\n      theme = _useState[0],\n      setTheme = _useState[1];\n\n  var _useState2 = useState(false),\n      mountedComponent = _useState2[0],\n      setMountedComponent = _useState2[1];\n\n  var setMode = function setMode(mode) {\n    window.localStorage.setItem('theme', mode);\n    setTheme(mode);\n  };\n\n  var themeToggler = function themeToggler() {\n    return theme === 'light' ? setMode('dark') : setMode('light');\n  };\n\n  useEffect(function () {\n    var localTheme = window.localStorage.getItem('theme');\n    localTheme && setTheme(localTheme);\n    setMountedComponent(true);\n  }, []);\n  return [theme, themeToggler, mountedComponent];\n};\n\n_s(useDarkMode, \"3vHG2IrrrJiwDDTUwLXEB9EEIMA=\");","map":{"version":3,"sources":["/Users/gunsood/Documents/Projects/Hacker_News_Article_App/hacker-news-app/components/util/useDarkMode.js"],"names":["useEffect","useState","useDarkMode","theme","setTheme","mountedComponent","setMountedComponent","setMode","mode","window","localStorage","setItem","themeToggler","localTheme","getItem"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AAAA,kBACHD,QAAQ,CAAC,OAAD,CADL;AAAA,MACtBE,KADsB;AAAA,MACfC,QADe;;AAAA,mBAEmBH,QAAQ,CAAC,KAAD,CAF3B;AAAA,MAEtBI,gBAFsB;AAAA,MAEJC,mBAFI;;AAI7B,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI,EAAI;AACpBC,IAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCH,IAArC;AACAJ,IAAAA,QAAQ,CAACI,IAAD,CAAR;AACH,GAHD;;AAKA,MAAMI,YAAY,GAAG,SAAfA,YAAe;AAAA,WAAMT,KAAK,KAAK,OAAV,GAAoBI,OAAO,CAAC,MAAD,CAA3B,GAAsCA,OAAO,CAAC,OAAD,CAAnD;AAAA,GAArB;;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMa,UAAU,GAAGJ,MAAM,CAACC,YAAP,CAAoBI,OAApB,CAA4B,OAA5B,CAAnB;AACAD,IAAAA,UAAU,IAAIT,QAAQ,CAACS,UAAD,CAAtB;AACAP,IAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH,GAJQ,EAIN,EAJM,CAAT;AAKA,SAAO,CAACH,KAAD,EAAQS,YAAR,EAAsBP,gBAAtB,CAAP;AACH,CAjBM;;GAAMH,W","sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useDarkMode = () => {\n    const [theme, setTheme] = useState('light');\n    const [mountedComponent, setMountedComponent] = useState(false)\n\n    const setMode = mode => {\n        window.localStorage.setItem('theme', mode)\n        setTheme(mode)\n    };\n\n    const themeToggler = () => theme === 'light' ? setMode('dark') : setMode('light')\n\n    useEffect(() => {\n        const localTheme = window.localStorage.getItem('theme');\n        localTheme && setTheme(localTheme);\n        setMountedComponent(true);\n    }, []);\n    return [theme, themeToggler, mountedComponent]\n};\n"]},"metadata":{},"sourceType":"module"}